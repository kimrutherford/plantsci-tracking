# SmallRNA config file  -*- conf -*-
name: SmallRNA::Web
long_name: SmallRNA Tracking
pipeline_directory: ${pipeline-directory}
data_sub_directory: ${pipeline-process-directory}
"Model::SmallRNAModel":
  schema_class: 'SmallRNA::DB'
  connect_info:
     - "dbi:Pg:dbname=${database-name};host=${database-host}"
     - '${database-user-name}'
     - '${database-password}'
authentication:
  default_realm: 'members'
  realms:
    members:
      credential:
        class: 'Password'
        password_field: 'password'
        password_type: 'clear'
      store:
        class: DBIx::Class
        user_class: SmallRNAModel::Person
        id_field: username
cri_api:
  username: ${cri-api-username}
  password: ${cri-api-password}
  protocol: ${cri-api-protocol}
  host: ${cri-api-host}
  port: ${cri-api-port}
# There needs to be a class_info entry for each class that will be displayed.
# Class flags:
#   editable: an edit link and edit page will be created for this class
#   display_field: if provided, the value in this field will be used whenever
#                  objects of this class need to be displayed as a name, eg.
#                  in a select box
#   field_info_list: a list of field_infos for this class
# Field infomation:
#   The field_info_list, if provided is used to decide which columns to
#   display when listing a class or showing an object.
#   Field flags:
#     - name: the description to display for the field
#     - editable: if set and true, the field is editable
#     - conf:
#        - if set, and the value matches /^\w[\w\d]+$/, use this value instead
#          of the name as the database column to retrieve the data from
#        - if set, and the value does not match /^\w[\w\d]+$/, evaluate as
#          perl code for each object / row to be displayed.  During evaluation,
#          $object will be set to the current row.  Any HTML characters will be
#          passed through to the user.  These fields cannot be edited
#        - if not set, the name is used to choose the database
#          column that holds the value for this field
class_info:
  cv:
    editable: 1
    display_field: name
    field_info_list:
      - name: name
        editable: 1
      - name: definition
        editable: 1
  cvterm:
    editable: 1
    display_field: name
    field_info_list:
      - name: name
        editable: 1
      - name: definition
        editable: 1
      - name: cv_id
        editable: 1
  dbxref:
    editable: 1
    display_field: accession
  db:
    editable: 1
    display_field: name
  organisation:
    display_field: name
    field_info_list:
      - name: name
        editable: 1
      - name: description
        editable: 1
  organism:
    editable: 1
    display_field: full_name
    order_by:
      - genus
      - species
    field_info_list:
      - name: genus
        editable: 1
      - name: species
        editable: 1
      - name: ecotypes
        editable: 1
  person:
    editable: 1
    display_field: full_name
    order_by:
      - first_name
      - last_name
    field_info_list:
      - name: username
        editable: 1
      - name: organisation
        default_value: "'DCB'"
        editable: 1
      - name: first_name
        editable: 1
      - name: last_name
        editable: 1
      - name: password
        editable: 1
        admin_only: 1
      - name: role
        default_value: "'local'"
        values_constraint: 'cv->name = "tracking users types"'
        editable: 1
        admin_only: 1
  biosample:
    editable: 1
    display_field: name
    # hack to put the biosamples in a sensible order:
    order_by: "substring(me.name from E'(?:SL([\\\\d]+).*|(.*))')::integer, me.biosample_id"
    field_info_list:
      - name: name
        default_value: |
           use SmallRNA::DBLayer::Loader;
           SmallRNA::DBLayer::Loader::get_unique_identifier($c->schema(), 'Biosample', 'name', 'SL');
        editable: 1
      - name: description
        editable: 1
      - name: biosample_creator
        default_value: '$c->user() ? $c->user()->full_name() : undef'
        editable: 1
      - name: genotype
        editable: 1
      - name: protocol
        editable: 1
      - name: biosample_type
        editable: 1
        values_constraint: 'cv->name = "tracking biosample types"'
      - name: molecule_type
        editable: 1
        values_constraint: 'cv->name = "tracking molecule types"'
      - name: treatment_type
        editable: 1
        values_constraint: 'cv->name = "tracking treatment types"'
      - name: fractionation_type
        editable: 1
        values_constraint: 'cv->name = "tracking fractionation types"'
      - name: tissue
        editable: 1
      - name: processing_requirement
        values_constraint: 'cv->name = "tracking biosample processing requirements"'
        editable: 1
      - name: ecotypes
        referenced_class: Ecotype
        editable: 1
        is_collection: 1
      - name: projects
        source: pipeprojects
        referenced_class: Pipeproject
        editable: 1
        is_collection: 1
  ecotype:
    editable: 1
    display_field: long_description
    order_by: description
    field_info_list:
      - name: description
        editable: 1
      - name: organism
        editable: 1
  genotype:
    display_field: description
  tissue:
    display_field: description
  pipeproject:
    editable: 1
    display_field: identifier
    field_info_list:
      - name: identifier
        editable: 1
      - name: description
        editable: 1
      - name: owner
        default_value: '$c->user() ? $c->user()->full_name() : undef'
        editable: 1
      - name: funder
        editable: 1
      - name: biosamples
        referenced_class: Biosample
        editable: 1
        is_collection: 1
  process_conf:
    editable: 1
    display_field: long_description
    order_by: type
    field_info_list:
      - name: type
        values_constraint: 'cv->name = "tracking analysis types"'
        editable: 1
      - name: detail
        editable: 1
      - name: runable_name
        editable: 1
  process_conf_input:
    editable: 1
    display_field: description
    order_by: process_conf
    field_info_list:
      - name: content_type
        values_constraint: 'cv->name = "tracking file content types"'
        editable: 1
      - name: format_type
        values_constraint: 'cv->name = "tracking file format types"'
        editable: 1
      - name: ecotype
        editable: 1
      - name: biosample_type
        editable: 1
      - name: process_conf
        editable: 1
  pipeprocess:
    display_field: description
    order_by: created_stamp
  barcode:
    display_field: long_identifier
    order_by: identifier
    field_info_list:
      - name: identifier
        editable: 1
      - name: code
        editable: 1
      - name: barcode_set
        editable: 1
  barcode_set:
    display_field: name
  pipedata:
    display_field: file_name
  sequencing_run:
    editable: 1
    display_field: identifier
    field_info_list:
      - name: identifier
        default_value: |
           use SmallRNA::DBLayer::Loader;
           SmallRNA::DBLayer::Loader::get_unique_identifier($c->schema(), 'SequencingRun', 'identifier', 'RUN-');
        editable: 1
      - name: Sequencing centre
        source: sequencing_centre
        editable: 1
        default_value: '"CRUK CRI"'
      - name: Sequencing type
        source: sequencing_type
        values_constraint: 'cv->name = "tracking sequencing method"'
        editable: 1
      - name: Sequencing sample
        source: sequencing_sample
        editable: 1
      - name: quality
        editable: 1
        values_constraint: 'cv->name = "tracking quality values"'
  sequencing_sample:
    editable: 1
    display_field: identifier
    order_by: "substring(me.identifier from E'(?:SL([\\\\d]+).*|(.*))')::integer, me.sequencing_sample_id"
    field_info_list:
      - name: identifier
        editable: 1
      - name: sequencing_centre_identifier
        editable: 1
      - name: sample_creator
        editable: 1
        referenced_class: Person
      - name: read_length
        editable: 1
        default_value: '36'
      - name: end_type
        editable: 1
        values_constraint: 'cv->name = "end type"'
        default: "'single end'"
      - name: libraries
        referenced_class: Library
        editable: 1
        is_collection: 1
  library:
    editable: 1
    display_field: identifier
    # hack to put the libraries in a sensible order:
    order_by: "substring(me.identifier from E'(?:SL([\\\\d]+).*|(.*))')::integer, me.library_id"
    field_info_list:
      - name: identifier
        editable: 1
      - name: sequencing_centre_identifier
        editable: 0
      - name: description
        editable: 1
      - name: run type
        source: library_type
        values_constraint: 'cv->name = "tracking library types"'
        editable: 1
      - name: biosample
        editable: 1
      - name: barcode
        editable: 1
      - name: adaptor
        values_constraint: 'cv->name = "tracking 3 prime adaptor"'
        editable: 1
      - name: sequencing sample
        source: sequencing_sample
        editable: 1
  protocol:
    display_field: name
  pub:
    display_field: title
    editable: 1
    field_info_list:
      - name: title
        editable: 1
      - name: issue
        editable: 1
      - name: pyear
        editable: 1
      - name: pages
        editable: 1
      - name: uniquename
        default_value: |
           use SmallRNA::DBLayer::Loader;
           SmallRNA::DBLayer::Loader::get_unique_identifier($c->schema(), 'Pub', 'uniquename', 'PIPELINE-PUB-');
        editable: 1
      - name: type
        source: type_id
        values_constraint: 'cv->name = "tracking publication types"'
        editable: 1
report_list:
  - name: biosample_read_counts
    description: Counts of fasta sequences for each biosample at each pipeline stage
    object_type: biosample
    columns:
      - name: Biosample name
        source: name
      - name: Ecotype name
        source: |
           ($object->ecotypes())[0]->long_description()
      - name: Raw reads
        format: integer
        source: |
           SmallRNA::Web::Report::get_pipedata_property($object, undef, "raw_reads", "fastq", "sequence count")
      - name: Reads after trimming
        format: integer
        source: |
           SmallRNA::Web::Report::get_pipedata_property($object, undef, "trimmed_reads", "fasta", "sequence count")
      - name: Remove adapter rejects
        format: integer
        source: |
           SmallRNA::Web::Report::get_pipedata_property($object, undef, "trim_rejects", "fasta", "sequence count")
      - name: Remove adapter rejects (containing Ns)
        format: integer
        source: |
           SmallRNA::Web::Report::get_pipedata_property($object, undef, "trim_n_rejects", "fasta", "sequence count")
      - name: Filtered reads
        format: integer
        source: |
           SmallRNA::Web::Report::get_pipedata_property($object, undef, "filtered_trimmed_reads", "fasta", "sequence count")
      - name: Non redundant reads
        format: integer
        source: |
           SmallRNA::Web::Report::get_pipedata_property($object, undef, "non_redundant_reads", "fasta", "sequence count")
      - name: Non aligned reads
        format: integer
        source: |
           SmallRNA::Web::Report::get_pipedata_property($object, "genome", "non_aligned_reads", "fasta", "sequence count")
      - name: Aligned reads
        format: integer
        source: |
           SmallRNA::Web::Report::get_pipedata_property($object, "genome", "aligned_reads", "fasta", "sequence count")
      - name: Redundant aligned reads
        format: integer
        source: |
           SmallRNA::Web::Report::get_pipedata_property($object, "genome", "redundant_aligned_reads", "fasta", "sequence count")
  - name: biosample_read_percentages
    description: Relative (percentage) reads numbers for selected pipeline stages
    object_type: biosample
    columns:
      - name: Biosample name
        source: name
      - name: Ecotype name
        source: |
           ($object->ecotypes())[0]->long_description()
      - name: Raw read count
        format: integer
        source: |
           SmallRNA::Web::Report::get_pipedata_property($object, undef, "raw_reads", "fastq", "sequence count")
      - name: Reads after trimming v raw reads
        align: right
        source: |
           SmallRNA::Web::Report::get_pipedata_property_precent($object,
                                                                first => [ undef, "trimmed_reads", "fasta", "sequence count" ],
                                                                second => [ undef, "raw_reads", "fastq", "sequence count" ])
      - name: Remove adapter rejects v raw reads
        align: right
        source: |
           SmallRNA::Web::Report::get_pipedata_property_precent($object,
                                                                first => [ undef, "trim_rejects", "fasta", "sequence count" ],
                                                                second => [ undef, "raw_reads", "fastq", "sequence count" ])
      - name: Remove adapter rejects (containing Ns) v raw reads
        align: right
        source: |
           SmallRNA::Web::Report::get_pipedata_property_precent($object,
                                                                first => [ undef, "trim_n_rejects", "fasta", "sequence count" ],
                                                                second => [ undef, "raw_reads", "fastq", "sequence count" ])
      - name: Filtered reads v raw reads
        align: right
        source: |
           SmallRNA::Web::Report::get_pipedata_property_precent($object,
                                                                first => [ undef, "filtered_trimmed_reads", "fasta", "sequence count" ],
                                                                second => [ undef, "raw_reads", "fastq", "sequence count" ])
      - name: Non redundant reads v raw reads
        align: right
        source: |
           SmallRNA::Web::Report::get_pipedata_property_precent($object,
                                                                first => [ undef, "non_redundant_reads", "fasta", "sequence count" ],
                                                                second => [ undef, "raw_reads", "fastq", "sequence count" ])
      - name: Non redundant reads v filtered reads
        align: right
        source: |
           SmallRNA::Web::Report::get_pipedata_property_precent($object,
                                                                first => [ undef, "non_redundant_reads", "fasta", "sequence count" ],
                                                                second => [ undef, "filtered_trimmed_reads", "fasta", "sequence count" ])
      - name: Non aligned reads v non-redundant
        align: right
        source: |
           SmallRNA::Web::Report::get_pipedata_property_precent($object,
                                                                first => [ "genome", "non_aligned_reads", "fasta", "sequence count" ],
                                                                second => [ undef, "non_redundant_reads", "fasta", "sequence count" ])
      - name: Aligned reads v non-redundant
        align: right
        source: |
           SmallRNA::Web::Report::get_pipedata_property_precent($object,
                                                                first => [ "genome", "aligned_reads", "fasta", "sequence count" ],
                                                                second => [ undef, "non_redundant_reads", "fasta", "sequence count" ])
      - name: Redundant aligned reads v raw reads
        align: right
        source: |
           SmallRNA::Web::Report::get_pipedata_property_precent($object,
                                                                first => [ "genome", "redundant_aligned_reads", "fasta", "sequence count" ],
                                                                second => [ undef, "raw_reads", "fastq", "sequence count" ])
gbrowse:
  Arabidopsis_thaliana:
    prefix: '/gb2/gbrowse/arabidopsis'
  Chlamydomonas_reinhardtii:
    prefix: '/gb2/gbrowse/chlamy'
  Solanum_lycopersicon:
    prefix: '/gb2/gbrowse/tomato'
  Lycopersicon_esculentum:
    prefix: '/gb2/gbrowse/tomato'
plugins:
  object_page:
    biosample:
      - name: GBrowse
        path: /plugins/gbrowse.mhtml
        css_class: gbrowse_link
      - name: Sequence composition counts and statistics
        path: /plugins/seq_comp.mhtml
        css_class: seq_comp_graph
      - name: Size distribution and first base composition graphs before alignment
        path: /plugins/sizecomp.mhtml
        css_class: size_dist_graph
      - name: Size distribution and first base composition graphs for genome matching reads
        path: /plugins/sizecomp.mhtml
        args:
          component: genome
        css_class: size_dist_graph
      - name: "Size distribution and first base composition graphs for reads that don't match the genome"
        path: /plugins/sizecomp.mhtml
        args:
          component: genome
          flags: not_aligned
        css_class: size_dist_graph
      - name: Size distribution graphs for tRNA matching reads
        constraint: "$object->ecotypes()->search_related('organism', { genus => 'Arabidopsis', species => 'thaliana' })->count() >= 1"
        args:
          component: trna
        path: /plugins/sizecomp.mhtml
        css_class: size_dist_graph
      - name: Size distribution graphs for miRNA hairpin matching reads
        constraint: "$object->ecotypes()->search_related('organism', { genus => 'Arabidopsis', species => 'thaliana' })->count() >= 1"
        args:
          component: mirbase-hairpin
        path: /plugins/sizecomp.mhtml
        css_class: size_dist_graph
      - name: Size distribution graphs for mature miRNA matching reads
        constraint: |
           $object->ecotypes()->search_related('organism', { genus => 'Arabidopsis', species => 'thaliana' })->count() >= 1 ||
           $object->ecotypes()->search_related('organism', { genus => 'Nicotiana', species => 'benthamiana' })->count() >= 1
        args:
          component: mirbase-mature
        path: /plugins/sizecomp.mhtml
        css_class: size_dist_graph
      - name: Size distribution graphs for mature star miRNA matching reads
        constraint: "$object->ecotypes()->search_related('organism', { genus => 'Arabidopsis', species => 'thaliana' })->count() >= 1"
        args:
          component: mirbase-maturestar
        path: /plugins/sizecomp.mhtml
        css_class: size_dist_graph
      - name: Base distribution graph
        path: /plugins/basedist.mhtml
        css_class: base_dist_graph
    sequencing_run:
      - name: Multiplexing barcode distribution graph
        path: /plugins/barcode_dist.mhtml
        css_class: barcode_dist
      - name: Show status of CRI sequencing run
        path: /plugins/cri_request_status.mhtml
        css_class: cri_request_status
    sequencing_sample:
      - name: Multiplexing barcode distribution graph
        path: /plugins/barcode_dist.mhtml
        css_class: barcode_dist
      - name: Make a sequencing_run and add to CRI database
        path: /plugins/make_cri_request.mhtml
        css_class: make_cri_request
    pipedata:
      - name: Data file details
        path: /plugins/pipedata_details.mhtml
  front_page:
    - name: Sequencing samples (number of lanes) submitted by quarter, grouped by date the data was received
      path: /plugins/sample_submissions.mhtml
      css_class: sample_submission_graph
    - name: Cumulative number of sequences by month, grouped by date the data was received
      path: /plugins/cumulative_reads_by_month.mhtml
      css_class: cumulative_reads_by_month
