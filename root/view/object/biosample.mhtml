<%args>
$object
$type
</%args>

<&| /view/object/object_top.mhtml, object => $object,
  field_labels => [qw(name description genotype biosample_type protocol molecule_type
                   treatment_type fractionation_type tissue
                   processing_requirement)]&>
% if ($c->user_exists()) {
  <div>
    <a href="<% $c->uri_for('/new/object/library', { 'object.name' => $new_library_name,
                                                     'biosample.id' => $object->biosample_id() }) %>">
      Create a library from this biosample
    </a>
  </div>
% }
</&>

<div id="collections">
  <& /view/list.mhtml, type => 'pipeproject', rs => $pipeprojects_rs,
    list_title => "The project$pipeproject_plu containing this biosample" &>
  <& /view/list.mhtml, type => 'organism', rs => $organisms_rs,
    list_title => "The organism$organism_plu for this biosample" &>
  <& /view/list.mhtml, type => 'ecotype', rs => $ecotypes_rs,
    list_title => "The ecotype$ecotype_plu for this biosample" &>
  <& /view/list.mhtml, type => 'sequencing_run', rs => $seqruns_rs,
    list_title => "The sequencing run$seqruns_plu for this biosample", disclosed => 1 &>
  <& /view/list.mhtml, type => 'sequencing_sample', rs => $sequencing_samples_rs,
    list_title => "The sequencing sample$sequencing_samples_plu containing this biosample",
    disclosed => 1 &>
  <& /view/list.mhtml, type => 'library', rs => $libraries_rs,
    list_title => "The " . ($libraries_plu ? 'libraries' : 'library') . " created from this biosample",
    disclosed => 1 &>
  <& /view/list.mhtml, type => 'pipedata', rs => $pipedatas_rs,
    list_title => "The file$pipedata_plu for this biosample", disclosed => 0 &>
</div>

<%init>
my $organisms_rs =
  $object->biosample_ecotypes()->search_related('ecotype')->search_related('organism',
                                                                        {}, { distinct => 1} );
my $organisms_count = $organisms_rs->count();
my $organism_plu = ($organisms_count != 1) ? 's' : '';
my $ecotypes_rs =
  $object->biosample_ecotypes()->search_related('ecotype');
my $ecotypes_count = $ecotypes_rs->count();
my $ecotype_plu = ($ecotypes_count != 1) ? 's' : '';
my $seqruns_rs = $object->libraries()->search_related('sequencing_sample')->search_related('sequencing_runs');
my $seqruns_count = $seqruns_rs->count();
my $seqruns_plu = ($seqruns_count != 1) ? 's' : '';
# show only those libraries that have a code
my $libraries_rs = $object->libraries();
my $libraries_count = $libraries_rs->count();
my $libraries_plu = ($libraries_count != 1) ? 's' : '';
my $sequencing_samples_rs = $object->libraries->search_related('sequencing_sample');
my $sequencing_samples_count = $sequencing_samples_rs->count();
my $sequencing_samples_plu = ($sequencing_samples_count != 1) ? 's' : '';
my $pipedatas_rs = $object->pipedatas();
my $pipedatas_count = $pipedatas_rs->count();
my $pipedata_plu = ($pipedatas_count != 1) ? 's' : '';
my $pipeprojects_rs = $object->pipeprojects();
my $pipeprojects_count = $pipeprojects_rs->count();
my $pipeproject_plu = ($pipeprojects_count != 1) ? 's' : '';

use SmallRNA::DBLayer::Loader;
my $new_library_name =
  SmallRNA::DBLayer::Loader::get_unique_identifier($c->schema(), 'Library', 'name',
                                                   $object->name() . '_L');
</%init>
