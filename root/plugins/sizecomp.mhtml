<%args>
$object
</%args>

<%doc>
This component show composition statistics and graphs.
</%doc>

<script type="text/javascript">
    $(function() {
        $("#tabs").tabs();
    });

    $(function() {
        $('.inlinesparkline').sparkline('html', {type: 'bar', barSpacing: 0, barWidth: 1}); 
    });
</script>

<div class="sect">
<span class="sect-title undisclosed-title">
  <a href="#">Base composition and size distribution graphs and statistics</a>
</span>
<div id="tabs">
  <ul>
    <li><a href="#tabs-stats">Sequence statistics</a></li>
%   while (my ($type, $pipedata) = each %graphs) {
%     my $sparkline_vals = get_sparkline_values($c, $pipedata);
    <li><a href="#tabs-<% $pipedata->pipedata_id() %>">
        <% $type %>
        <span class="inlinesparkline"><% $sparkline_vals %></span>
    </a></li>
%   }
  </ul>
  <div id="tabs-stats">
    <& /plugins/readstats.mhtml, object => $object &>
  </div>
%   while (my ($type, $pipedata) = each %graphs) {
  <div id="tabs-<% $pipedata->pipedata_id() %>">
    <img src='<% $c->uri_for("/plugin/graph/sizedist", $pipedata->pipedata_id()) %>'/>
  </div>
%   }
</div>
</div>

<%init>
my $schema = $c->schema();
my $content_type = $schema->find_with_type('Cvterm', 'name', 'first_base_summary');
my @pipedatas = $object->pipedatas()->search({content_type => $content_type->cvterm_id()});
my %graphs = ();

sub get_sparkline_values
{
  my $c = shift;
  my $pipedata = shift;

  my ($counts_ref, $min, $max) = 
    SmallRNA::Web::Controller::Plugin::SizeDistGraph::get_pipedata_counts($c, $pipedata); 

  my %counts = %$counts_ref;
  my @lengths = (15 .. $max);

  my @total_counts = (0) x @lengths;

  for my $length (@lengths) {
    for my $base (qw(A T C G)) {

      if (defined $counts{$length}{$base}) {
        $total_counts[$length] += $counts{$length}{$base};
      }
    }
  }

  return join ',', @total_counts;
}

for my $pipedata (@pipedatas) {
  my @input_pipedatas = $pipedata->generating_pipeprocess()->input_pipedatas();
  if (@input_pipedatas) {
    my $content_type_name = $input_pipedatas[0]->content_type()->name();
    if ($content_type_name eq 'srna_reads') {
      $graphs{'All reads'} = $pipedata;
    } else {
      if ($content_type_name eq 'non_redundant_srna_reads') {
        $graphs{'Non-redundant reads'} = $pipedata;
      } else {
        if ($content_type_name eq 'genome_aligned_srna_reads') {
          $graphs{'Genome aligned reads'} = $pipedata;
        }
      }
    }
  }
}
</%init>
