<%args>
$object
$name
</%args>

<%doc>
This component shows counts and composition statistics
</%doc>

<script type="text/javascript">
    $(function() {
        $("#seq-comp-tabs").tabs();
    });
</script>

<div class="sect">
<span class="sect-title disclosed-title">
  <a href="#"><% $name %></a>
</span>
<div class="sect-content tracking-tabs" id="seq-comp-tabs">
  <ul>
    <li><a href="#seq-comp-tabs-stats">Sequence statistics</a></li>
% if (defined $fastq_pipedata) {
    <li><a href="#seq-comp-tabs-n-mers">Top n-mers in FastQ file</a></li>
% }
  </ul>

  <div id="seq-comp-tabs-stats">
% if (@stats > 0) {
<table class="list">
  <thead>
    <tr>
% if ($c->user_exists() && $c->user()->role()->name() eq 'admin') {
      <td>
        Content type
      </td>
% }
      <td>
        Description
      </td>
      <td style="white-space: nowrap;">
        Alignment target
      </td>
      <td style="white-space: nowrap;">
        Number of sequences
      </td>
      <td style="white-space: nowrap;">
        Total bases
      </td>
% if ($c->user_exists() && $c->user()->role()->name() eq 'admin') {
      <td style="white-space: nowrap;">
        G+C bases
      </td>
% }
      <td style="white-space: nowrap;">
        G+C percentage
      </td>
    </tr>
  </thead>
  <tbody>
% my $row_count = 0;
% use Number::Format;
% my $fmt = Number::Format->new();
% for my $stat (@stats) {
%  my @details_list = @{$stat->{details_list}};
%  for (my $detail_index = 0; $detail_index < @details_list; $detail_index++) {
%    my $detail = $details_list[$detail_index];
    <tr class="<% $row_count % 2 == 0 ? 'even' : 'odd' %>">
% if ($c->user_exists() && $c->user()->role()->name() eq 'admin') {
    <td>
      <% $stat->{content_type_name} %>
    </td>
% }
% if ($detail_index == 0) {
    <td rowspan="<% scalar(@details_list) %>">
      <% $stat->{label} %>
    </td>
% }
    <td>
      <% $detail->{alignment_component} %>
    </td>
    <td>
      <% $fmt->format_number($detail->{data}->{number_of_sequences}) %>
    </td>
    <td>
      <% $fmt->format_number($detail->{data}->{total_bases}) %>
    </td>
% if ($c->user_exists() && $c->user()->role()->name() eq 'admin') {
    <td>
      <% $fmt->format_number($detail->{data}->{gc_bases}) %>
    </td>
% }
    <td>
      <% $detail->{data}->{gc_content} %>
    </td>
  </tr>
%   }
%   $row_count++
% }
  </tbody>
</table>
% } else {
  No statistics available
% }

  </div>

% if (defined $fastq_pipedata) {
  <div id="seq-comp-tabs-n-mers">
    <& /plugins/pipedata_details.mhtml, object => $fastq_pipedata &>
  </div>
% }

</div>
</div>

<%init>
my $schema = $c->schema();

my $fastq_pipedata = undef;

my $fast_stats_type = $schema->find_with_type('Cvterm', 'name', 'fast_stats');
my $fasta_type = $schema->find_with_type('Cvterm', 'name', 'fasta');
my $fastq_type = $schema->find_with_type('Cvterm', 'name', 'fastq');

my $query = { -or => [ format_type => $fasta_type->cvterm_id(),
                       format_type => $fastq_type->cvterm_id() ] };
my $options = { order_by => 'pipedata_id' };

my @fast_pipe_datas = $object->pipedatas()->search($query, $options);

my @stats = ();

my $data_directory = $c->config()->data_directory();

# "fast" = fasta or fastq
for my $fast_pipe_data (@fast_pipe_datas) {
  my @stat_pipedatas =
    $fast_pipe_data->next_pipeprocesses()->search_related('pipedatas',
                                                          { content_type =>
                                                              $fast_stats_type->cvterm_id() },
                                                          { });

  if (@stat_pipedatas) {
    my $fast_stat_pipe_data = $stat_pipedatas[0];

    my $content_type = $fast_pipe_data->content_type();
    my $content_type_name = $content_type->name();


    if ($content_type_name eq 'raw_reads') {
      if ($fast_pipe_data->format_type()->name eq 'fastq') {
        $fastq_pipedata = $fast_pipe_data;
      }
    }

    my $fast_stat_file_name = $data_directory . '/' . $fast_stat_pipe_data->file_name();

    my @fast_properties = $fast_pipe_data->pipedata_properties();

    # ignore fasta from alignments that aren't from patman
    next if grep { $_->type()->name() eq 'alignment program' &&
                   $_->value() ne 'patman' } @fast_properties;

    my $alignment_component = '';

    for my $property (@fast_properties) {
      if ($property->type()->name() eq 'alignment component') {
        $alignment_component = $property->value();
      }
    }

    my %fast_data = ();

    open my $stat_file, '<', $fast_stat_file_name
      or die "can't open $fast_stat_file_name: $!\n";

    while (defined (my $line = <$stat_file>)) {
      if ($line =~ /(.*):\s*(.*?)\s*$/) {
        $fast_data{$1} = $2;
      }
    }

    if ($fast_data{total_bases} > 0) {
      my $gc_content = 100.0 * $fast_data{gc_bases} / $fast_data{total_bases};
      $fast_data{gc_content} = sprintf "%3.2f", $gc_content;
    } else {
      $fast_data{gc_content} = 'N/A'
    }

    my $content_type_def = $fast_pipe_data->content_type()->definition();

    my $details = {
      fast_pipe_data => $fast_stat_pipe_data,
      data => \%fast_data,
      alignment_component => $alignment_component,
    };

    my ($entry) = grep { $_->{content_type_name} eq $content_type_name } @stats;

    if (!defined $entry) {
      $entry = { 
        label => $content_type_def,
        content_type_name => $content_type_name,
        details_list => []
      };
      push @stats, $entry;
    }

    push @{$entry->{details_list}}, $details;

    close $stat_file or die "can't close $fast_stat_file_name: $!\n";
  }
}

</%init>
